spring.application.name=organizing_work_boot      # 스프링부트 애플리케이션 이름 설정


# ================================
# PostgreSQL 데이터베이스 설정
# ================================
spring.datasource.url=jdbc:postgresql://localhost:5432/organizing_work
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver


# ================================
# Oracle 데이터베이스 설정
# (추후 멀티 데이터소스 구성 시 사용)
# ================================
spring.datasource.oracle.url=jdbc:oracle:thin:@//localhost:1521/orcl
spring.datasource.oracle.username=oracle_user
spring.datasource.oracle.password=oracle_pass
spring.datasource.oracle.driver-class-name=oracle.jdbc.OracleDriver


# ================================
# JPA / Hibernate 설정
# ================================

# 애플리케이션 실행 시 DB 스키마 자동 업데이트
spring.jpa.hibernate.ddl-auto=update

# SQL 쿼리 콘솔 출력 여부
spring.jpa.show-sql=true

# PostgreSQL용 Hibernate Dialect 지정
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Hibernate의 추가 속성
spring.jpa.properties.hibernate.show_sql=true       # SQL 로그 출력
spring.jpa.properties.hibernate.format_sql=true     # SQL 포맷 정렬 출력


# ================================
# 로깅(Logging) 설정
# ================================

# Hibernate 실행 SQL 로그 레벨 설정
logging.level.org.hibernate.SQL=DEBUG

# PreparedStatement 바인딩 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


# ================================
# CORS (Cross-Origin Resource Sharing) 설정
# ================================

# React 개발 환경(로컬) 및 배포 환경 도메인 허용
app.cors.allowed-origins=http://localhost:3000,https://react.mycompany.com

# 참고:
# - 개발 중에는 localhost:3000(React 기본 포트)을 허용
# - 배포 시에는 실제 서비스 도메인(예: https://react.mycompany.com)만 허용
